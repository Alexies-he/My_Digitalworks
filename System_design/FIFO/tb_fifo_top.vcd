$date
	Fri Jun 11 15:15:33 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_fifo_top $end
$var wire 8 ! data_out [7:0] $end
$var reg 1 " clk $end
$var reg 8 # data_in [7:0] $end
$var reg 1 $ read_signal $end
$var reg 1 % rst_n $end
$var reg 1 & write_signal $end
$scope module U1 $end
$var wire 1 " clk $end
$var wire 8 ' data_in [7:0] $end
$var wire 1 $ read_signal $end
$var wire 1 % rst_n $end
$var wire 1 & write_signal $end
$var wire 3 ( write_addr [2:0] $end
$var wire 3 ) read_addr [2:0] $end
$var wire 1 * fall $end
$var wire 1 + empty $end
$var wire 8 , data_out [7:0] $end
$scope module C1 $end
$var wire 1 " clk $end
$var wire 8 - data_in [7:0] $end
$var wire 1 $ read_signal $end
$var wire 1 % rst_n $end
$var wire 1 & write_signal $end
$var wire 1 * fall $end
$var wire 1 + empty $end
$var reg 3 . data_addr [2:0] $end
$var reg 3 / read_addr [2:0] $end
$var reg 3 0 write_addr [2:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 " clk1 $end
$var wire 1 " clk2 $end
$var wire 8 1 data_in [7:0] $end
$var wire 1 $ rd $end
$var wire 3 2 read_addr [2:0] $end
$var wire 1 & wr $end
$var wire 3 3 write_addr [2:0] $end
$var reg 8 4 data_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
bx 2
b0 1
bx 0
bx /
bx .
bz -
bx ,
x+
x*
bx )
bx (
b0 '
1&
1%
0$
b0 #
0"
bx !
$end
#5
b0 (
b0 0
b0 3
b0 )
b0 /
b0 2
0*
1+
b0 .
0%
#6
1%
#10
0+
b1 .
b1 (
b1 0
b1 3
1"
#20
0"
b1 #
b1 '
b1 1
#30
b10 (
b10 0
b10 3
b10 .
1"
#40
0"
b10 #
b10 '
b10 1
#50
b11 .
b11 (
b11 0
b11 3
1"
#60
0"
b11 #
b11 '
b11 1
#70
b100 (
b100 0
b100 3
b100 .
1"
#80
0"
b100 #
b100 '
b100 1
#90
b101 .
b101 (
b101 0
b101 3
1"
#100
0"
b101 #
b101 '
b101 1
#110
b110 (
b110 0
b110 3
b110 .
1"
#120
0"
b110 #
b110 '
b110 1
#130
1*
b111 .
b111 (
b111 0
b111 3
1"
#140
0"
b111 #
b111 '
b111 1
#150
b0 (
b0 0
b0 3
1"
#160
0"
#161
1$
0&
#170
0*
b110 .
b1 )
b1 /
b1 2
b0 !
b0 ,
b0 4
1"
#180
0"
#190
b10 )
b10 /
b10 2
b101 .
b1 !
b1 ,
b1 4
1"
#200
0"
#210
b100 .
b11 )
b11 /
b11 2
b10 !
b10 ,
b10 4
1"
#220
0"
#230
b100 )
b100 /
b100 2
b11 .
b11 !
b11 ,
b11 4
1"
#240
0"
#250
b10 .
b101 )
b101 /
b101 2
b100 !
b100 ,
b100 4
1"
#260
0"
#270
b110 )
b110 /
b110 2
b1 .
b101 !
b101 ,
b101 4
1"
#280
0"
#290
1+
b0 .
b111 )
b111 /
b111 2
b110 !
b110 ,
b110 4
1"
#300
0"
#310
b0 )
b0 /
b0 2
b111 !
b111 ,
b111 4
1"
#320
0"
#330
b1 )
b1 /
b1 2
b0 !
b0 ,
b0 4
1"
#340
0"
#350
b10 )
b10 /
b10 2
b1 !
b1 ,
b1 4
1"
#360
0"
#370
b11 )
b11 /
b11 2
b10 !
b10 ,
b10 4
1"
#380
0"
#390
b100 )
b100 /
b100 2
b11 !
b11 ,
b11 4
1"
#400
0"
